# Usage Rules Cheatsheet

## What Are Usage Rules?

Your dependencies provide best practices that Claude follows automatically. They're synced to `CLAUDE.md` files.

## Available Commands

| Command | Description |
|---------|-------------|
| `mix usage_rules.sync` | Sync all available rules to root CLAUDE.md |
| `mix usage_rules.sync --list` | Show available rules from dependencies |
| `mix usage_rules.sync package_name` | Sync specific package rules |

## Common Usage Rules

| Package | Rule Name | What It Provides |
|---------|-----------|------------------|
| Elixir Core | `usage_rules:elixir` | Pattern matching, error handling, data structures |
| OTP | `usage_rules:otp` | GenServer, Task, fault tolerance best practices |
| Phoenix | `phoenix:phoenix` | Controller, router, endpoint patterns |
| LiveView | `phoenix:liveview` | Component, event handling, state management |
| Ecto | `phoenix:ecto` | Schema, changeset, query best practices |
| Ash | `ash` | Resource, action, calculation patterns |

## Nested Memories

Configure directory-specific rules:

```elixir
# .claude.exs
%{
  nested_memories: %{
    "test" => ["usage_rules:elixir", "usage_rules:otp"],
    "lib/my_app" => ["usage_rules:elixir", "usage_rules:otp", "phoenix:ecto"],
    "lib/my_app_web" => ["usage_rules:elixir", "usage_rules:otp", "phoenix:phoenix", "phoenix:liveview"]
  }
}
```

## Slash Commands

| Command | Arguments | Description |
|---------|-----------|-------------|
| `/memory:nested-add` | `[directory] [rules...]` | Add nested memory configuration |
| `/memory:nested-list` | - | List current nested memory setup |
| `/memory:nested-sync` | `[--force]` | Regenerate CLAUDE.md files from config |
| `/memory:check` | - | Validate nested memory configuration |

## Auto-Detection

When using Phoenix plugin:
```elixir
%{plugins: [Claude.Plugins.Phoenix]}
# Automatically detects and includes:
# - Phoenix framework rules
# - LiveView rules (if dependency exists)
# - Ecto rules (if dependency exists)
# - DaisyUI docs (if enabled)
```

## Examples

**Add rules to test directory:**
```bash
/memory:nested-add test usage_rules:elixir usage_rules:otp
```

**Phoenix project setup:**
```bash
/memory:nested-add lib/my_app usage_rules:elixir usage_rules:otp phoenix:ecto
/memory:nested-add lib/my_app_web usage_rules:elixir phoenix:phoenix phoenix:liveview
```

**Check what's available:**
```bash
mix usage_rules.sync --list
```

## File Locations

- **Root:** `CLAUDE.md` (project overview + general rules)
- **Directory-specific:** `path/to/dir/CLAUDE.md` (context-specific rules)
- **Configuration:** `.claude.exs` nested_memories section

## Troubleshooting

**Rules not appearing?**
- Run `mix usage_rules.sync --list` to see available rules
- Check if dependency actually provides usage rules
- Run `mix claude.install` to regenerate files

**Nested memories not working?**
- Verify directory paths exist
- Check `.claude.exs` nested_memories syntax
- Run `/memory:nested-sync --force` to regenerate