# Generators Cheatsheet

## Quick Reference

### Sub-Agent Generator

```bash
# Interactive mode (recommended for humans)
mix claude.gen.subagent

# Non-interactive (AI-friendly)
mix claude.gen.subagent \
  --name database-helper \
  --description "MUST BE USED for database operations" \
  --tools "read,grep,bash" \
  --prompt "You are a database expert..."
```

### Command Options

| Flag | Required | Description | Example |
|------|----------|-------------|---------|
| `--name` | ✓* | Agent name (kebab-case) | `test-expert` |
| `--description` | ✓* | Delegation trigger | `"MUST BE USED for tests"` |
| `--prompt` | ✓* | System instructions | `"You are..."` |
| `--tools` | | Comma-separated tools | `"read,grep,bash"` |

*Required for non-interactive mode

### Interactive Prompts

```
1. Name: lowercase-hyphen-separated
2. Description: When to invoke
3. Tools: comma-separated (Enter for defaults)
4. Prompt: Multi-line (Enter twice to finish)
```

### Tool Names

| Input Format | Converted To | Example |
|--------------|--------------|---------|
| `snake_case` | `TitleCase` | `web_fetch` → `WebFetch` |
| `lowercase` | `Titlecase` | `read` → `Read` |
| `UPPERCASE` | `Uppercase` | `BASH` → `Bash` |

### Available Tools

```
bash, edit, glob, grep, ls, multi_edit,
notebook_edit, notebook_read, read,
todo_write, web_fetch, web_search, write
```

⚠️ **Avoid `task`** - Can cause delegation loops

### Default Tool Set

If no tools specified:
```elixir
[:read, :grep, :glob]  # Minimal search capabilities
```

### Generated Output

```
1. Updates .claude.exs
2. Creates .claude/agents/[name].md
3. Ready immediately (no restart needed)
```

### Examples

#### Test Specialist

```bash
mix claude.gen.subagent \
  --name test-expert \
  --description "MUST BE USED for ExUnit tests" \
  --tools "read,write,bash,grep" \
  --prompt "Expert in ExUnit testing patterns"
```

#### Migration Helper

```bash
mix claude.gen.subagent \
  --name migration-helper \
  --description "MUST BE USED for Ecto migrations" \
  --tools "read,write,grep" \
  --prompt "Database migration specialist"
```

#### Documentation Writer

```bash
mix claude.gen.subagent \
  --name docs-writer \
  --description "MUST BE USED for documentation" \
  --tools "read,write,edit" \
  --prompt "Technical documentation expert"
```

### Multi-line Prompts

For complex prompts in non-interactive mode:

```bash
mix claude.gen.subagent \
  --name complex-agent \
  --description "Complex tasks" \
  --prompt "Line 1
Line 2
Line 3"
```

### After Generation

```bash
# Apply changes
mix claude.install

# Verify creation
ls .claude/agents/

# Edit if needed
$EDITOR .claude.exs
```

### Common Patterns

| Task | Tools | Why |
|------|-------|-----|
| Reading code | `read,grep,glob` | Search and explore |
| Writing code | `read,write,edit` | Create and modify |
| Running tests | `read,bash,grep` | Execute and analyze |
| Database work | `read,write,bash` | Schema and migrations |
| Debugging | `read,grep,bash` | Investigate issues |

### Validation Rules

| Field | Validation | Example Error |
|-------|------------|---------------|
| Name | Lowercase, hyphens only | `"TestExpert" → "test-expert"` |
| Tools | Must be valid tool names | `"invalid_tool" → Error` |
| Description | Non-empty string | `"" → Required` |
| Prompt | Non-empty string | `"" → Required` |

### Tips

1. **Use Meta Agent first** - Just ask Claude to create agents
2. **Keep tools minimal** - Better performance
3. **Clear descriptions** - Use "MUST BE USED for..."
4. **Self-contained prompts** - Include context discovery
5. **Test immediately** - Agents work right after generation

## See Also

- [Generators Guide](../documentation/guide-generators.md) - Full documentation
- [Sub-Agents Guide](../documentation/guide-subagents.md) - Design principles
- [Sub-Agents Cheatsheet](subagents.cheatmd) - Configuration reference